/*
 * Copyright 2010 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-09-16 16:01:30 UTC)
 * on 2013-10-08 at 00:29:17 UTC 
 * Modify at your own risk.
 */

package cz.muni.fi.sdipr.core.google.plus.model;

/**
 * Model definition for Place.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the Google+ API. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Place extends com.google.api.client.json.GenericJson {

  /**
   * The physical address of the place.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Address address;

  /**
   * The display name of the place.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String displayName;

  /**
   * Identifies this resource as a place. Value: "plus#place".
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String kind;

  /**
   * The position of the place.
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Position position;

  /**
   * The physical address of the place.
   * @return value or {@code null} for none
   */
  public Address getAddress() {
    return address;
  }

  /**
   * The physical address of the place.
   * @param address address or {@code null} for none
   */
  public Place setAddress(Address address) {
    this.address = address;
    return this;
  }

  /**
   * The display name of the place.
   * @return value or {@code null} for none
   */
  public String getDisplayName() {
    return displayName;
  }

  /**
   * The display name of the place.
   * @param displayName displayName or {@code null} for none
   */
  public Place setDisplayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Identifies this resource as a place. Value: "plus#place".
   * @return value or {@code null} for none
   */
  public String getKind() {
    return kind;
  }

  /**
   * Identifies this resource as a place. Value: "plus#place".
   * @param kind kind or {@code null} for none
   */
  public Place setKind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * The position of the place.
   * @return value or {@code null} for none
   */
  public Position getPosition() {
    return position;
  }

  /**
   * The position of the place.
   * @param position position or {@code null} for none
   */
  public Place setPosition(Position position) {
    this.position = position;
    return this;
  }

  @Override
  public Place set(String fieldName, Object value) {
    return (Place) super.set(fieldName, value);
  }

  @Override
  public Place clone() {
    return (Place) super.clone();
  }

  /**
   * The physical address of the place.
   */
  public static final class Address extends com.google.api.client.json.GenericJson {

    /**
     * The formatted address for display.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private String formatted;

    /**
     * The formatted address for display.
     * @return value or {@code null} for none
     */
    public String getFormatted() {
      return formatted;
    }

    /**
     * The formatted address for display.
     * @param formatted formatted or {@code null} for none
     */
    public Address setFormatted(String formatted) {
      this.formatted = formatted;
      return this;
    }

    @Override
    public Address set(String fieldName, Object value) {
      return (Address) super.set(fieldName, value);
    }

    @Override
    public Address clone() {
      return (Address) super.clone();
    }

  }

  /**
   * The position of the place.
   */
  public static final class Position extends com.google.api.client.json.GenericJson {

    /**
     * The latitude of this position.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private Double latitude;

    /**
     * The longitude of this position.
     * The value may be {@code null}.
     */
    @com.google.api.client.util.Key
    private Double longitude;

    /**
     * The latitude of this position.
     * @return value or {@code null} for none
     */
    public Double getLatitude() {
      return latitude;
    }

    /**
     * The latitude of this position.
     * @param latitude latitude or {@code null} for none
     */
    public Position setLatitude(Double latitude) {
      this.latitude = latitude;
      return this;
    }

    /**
     * The longitude of this position.
     * @return value or {@code null} for none
     */
    public Double getLongitude() {
      return longitude;
    }

    /**
     * The longitude of this position.
     * @param longitude longitude or {@code null} for none
     */
    public Position setLongitude(Double longitude) {
      this.longitude = longitude;
      return this;
    }

    @Override
    public Position set(String fieldName, Object value) {
      return (Position) super.set(fieldName, value);
    }

    @Override
    public Position clone() {
      return (Position) super.clone();
    }

  }
}
